# Generated by Django 5.1.5 on 2025-10-13 16:32

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0006_school_education_office_code'),
    ]

    operations = [
        migrations.CreateModel(
            name='PointPolicy',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='예: 출석 체크, 숙제 제출, 프로젝트 발표', max_length=100, verbose_name='활동명')),
                ('default_point_value', models.IntegerField(help_text='포인트 부여 시 기본값으로 사용됩니다. 양수는 적립, 음수는 차감', verbose_name='기본 포인트 값')),
                ('description', models.TextField(blank=True, help_text='포인트 정책에 대한 상세 설명', verbose_name='설명')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화 여부')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_policies', to='accounts.teacher', verbose_name='생성한 교사')),
            ],
            options={
                'verbose_name': '포인트 정책',
                'verbose_name_plural': '포인트 정책',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('point_value', models.IntegerField(help_text='양수는 적립, 음수는 차감', verbose_name='포인트 값')),
                ('transaction_type', models.CharField(choices=[('earned', '적립'), ('deducted', '차감'), ('adjusted', '조정')], max_length=20, verbose_name='거래 유형')),
                ('reason', models.TextField(help_text='포인트 부여/차감 사유', verbose_name='사유')),
                ('balance_after', models.IntegerField(help_text='거래 완료 후 학생의 포인트 잔액 스냅샷', verbose_name='거래 후 잔액')),
                ('policy', models.ForeignKey(blank=True, help_text='수동 부여의 경우 null일 수 있음', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='points.pointpolicy', verbose_name='관련 정책')),
                ('processed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processed_transactions', to='accounts.teacher', verbose_name='처리한 교사')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_transactions', to='accounts.student', verbose_name='학생')),
            ],
            options={
                'verbose_name': '포인트 거래 내역',
                'verbose_name_plural': '포인트 거래 내역',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentPointBalance',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('current_balance', models.IntegerField(default=0, help_text='음수가 될 수 없습니다', validators=[django.core.validators.MinValueValidator(0)], verbose_name='현재 잔액')),
                ('total_earned', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='총 적립')),
                ('total_deducted', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='총 차감')),
                ('last_transaction_at', models.DateTimeField(blank=True, null=True, verbose_name='마지막 거래 시각')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='point_balance', to='accounts.student', verbose_name='학생')),
            ],
            options={
                'verbose_name': '학생 포인트 잔액',
                'verbose_name_plural': '학생 포인트 잔액',
                'ordering': ['-current_balance'],
            },
        ),
        migrations.AddIndex(
            model_name='pointpolicy',
            index=models.Index(fields=['created_by', 'is_active'], name='points_poin_created_c2d349_idx'),
        ),
        migrations.AddIndex(
            model_name='pointpolicy',
            index=models.Index(fields=['name'], name='points_poin_name_df4527_idx'),
        ),
        migrations.AddIndex(
            model_name='pointtransaction',
            index=models.Index(fields=['student', '-created_at'], name='points_poin_student_bf1051_idx'),
        ),
        migrations.AddIndex(
            model_name='pointtransaction',
            index=models.Index(fields=['transaction_type'], name='points_poin_transac_ce627f_idx'),
        ),
        migrations.AddIndex(
            model_name='pointtransaction',
            index=models.Index(fields=['processed_by'], name='points_poin_process_2700a4_idx'),
        ),
        migrations.AddIndex(
            model_name='studentpointbalance',
            index=models.Index(fields=['-current_balance'], name='points_stud_current_fe7c37_idx'),
        ),
        migrations.AddIndex(
            model_name='studentpointbalance',
            index=models.Index(fields=['student'], name='points_stud_student_173a86_idx'),
        ),
    ]
